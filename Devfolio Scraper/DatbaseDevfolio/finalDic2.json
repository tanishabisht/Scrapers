[{"idNo": 0, "name": "Drent", "desc": "A decentralized C2C renting marketplace", "devfolioLink": "https://devfolio.co/submissions/drent-2ddd", "githubLinks": ["https://bitbucket.org/manav2401/drent/src/main/", "https://www.notion.so/Ethereum-India-Fellowship-2-0-a785f5663cff4c27862da137202d6e34"], "special_mention": " ", "stacksUsed": ["Solidity", "IPFS", "ethers.js", "Matic", "MongoDB", "Nodejs", "Truffle Suite", "React."], "longDesc": "The problem Drent solves\nDrent is a decentralized C2C renting marketplace with almost no platform fees. The platform aims at solving the problem of optimal resource utilization. It provides flexibility for almost any user to put their unused products on rent and get paid. While on the other hand, it allows any user to borrow any product instead of investing a high amount in buying them. It solves the shortcomings of a centralized B2C marketplace such as not allowing users to rent their products or complete governance of a single party and transparency.\nSpecifications:\nDispute Resolving Mechanism: For such a marketplace, involving no middleman, a mechanism to govern and resolve disputes with fund management is required. Drent provides a mechanism for users to create a dispute upon an existing order and by the wisdom of crowds principle, users of the platform collectively vote and help in resolution. Hence no central parties can manipulate decisions. The voters stake an economic value in the platform which is locked in a contract and upon crowdsourced decision, results are declared and stakes (with rewards to winners) are released.\nThe platform maintains a reputation based on the events performed, which in turn benefits while paying the collateral amount.\nIn conjunction, the platform offers\nLightning-fast transactions powered by Matic Network.\nGasless Meta Transactions powered by Biconomy.\nDistributed storage powered by IPFS.\nInterest generation on tokens powered by Aave Protocol (partially implemented)."}, {"idNo": 1, "name": "Decentralised Portfolio", "desc": "Invest according to market sentiments with the power of decentralization", "devfolioLink": "https://devfolio.co/submissions/decentralised-portfolio-4677", "githubLinks": ["https://github.com/SaurabhAgarwala/Decentralized-Portfolio", "https://3qmeg.csb.app/"], "special_mention": " ", "stacksUsed": ["HTML", "Bootstrap", "CSS", "JS", "Django", "Python", "Web3", "Ethereum", "Portis", "Code Sandbox"], "longDesc": "The problem Decentralised Portfolio solves\nThere are lots of portfolios out there. These all portfolios are controlled by a centralized person/authority. So in the traditional portfolios, the sentiments of centralized authority may not be the same as sentiments of the market. This could lead the entire portfolio in the wrong direction. We built a platform, where no centralized authority will make decisions regarding the portfolio. All the decisions regarding the portfolio will be made by all the investors by voting. All the investors will have a say in the portfolio decision. So more investors mean more accurate prediction of market sentiments. Anyone can be a part of the portfolio. The user can join/leave the portfolio anytime they want. The funds which are locked in the smart contract follows the strategy which is decided by all the investors through voting."}, {"idNo": 2, "name": "Pachisi", "desc": "Make money being right.", "devfolioLink": "https://devfolio.co/submissions/pachisi-e432", "githubLinks": ["https://github.com/mundhrakeshav/pachisi"], "special_mention": " ", "stacksUsed": ["AAVE", "Ethereum", "Chainlink"], "longDesc": "The problem Pachisi solves\nInspiration\nSo we looked at various prediction markets in space and realised they weren't very user friendly and decentralised. So we thought to build a Market which is completely decentralised and is very easy to use.\nAlso we didn't wanted to have funds laying around in contract doing nothing so we used aave to make APY from the locked money.\nWhat it does\nUsers to be able to bet on various things like:\nAsset Prices\nCryptocurrencies\nStocks\nRandom Number Games\n7Up 7Down\nOdd Even\nCustom (Any Prediction started by users)\nNFT betting\nUsers can bet with Non fungible tokens.\nThey can place a 1 to 1 NFT bet\nWhere the NFTs will be locked in a contract and the winning person gets both NFTs.\n\u2192 We have used Chainlink's Infra\nAlarm Clock\nPriceFeeds\nTingo EOD Equity price\nVRF\n\u2192 We also use AAVE for generating APY from locked funds.\nIn future we plan to support 1 to multiple NFT bets and using NFT sharding we plan to support fractional NFT Betting"}, {"idNo": 3, "name": "dBlog", "desc": "Writing as usual. Publishing like never before.", "devfolioLink": "https://devfolio.co/submissions/decentralised-blog-150d", "githubLinks": ["https://dblog.vercel.app/", "https://github.com/AmanRaj1608/DeBlog", "https://thegraph.com/explorer/subgraph/amanraj1608/deblog"], "special_mention": " ", "stacksUsed": ["Solidity", "Next.js", "Ethereum", "The Graph", "Hardhat"], "longDesc": "The problem dBlog solves\nCurrently, we have many centralized blogging apps Medium but constantly. The way writing is distributed, interpreted, applied, and valued is wrong. With Donald Trump suspended from Twitter and Facebook, and Parler kicked off AWS, there is renewed discussion about what sort of speech is acceptable online, and how it should be enforced. These bans were justified however, they do raise questions that need to be discussed, especially within the technology community.\nWith all of these, some cases will be very clear on one side or the other of the dividing line, but there will always be a large grey area of cases that are unclear and a matter of subjective interpretation.\nThrough a decentralized, user-owned, crypto-based network, the platform revolutionizes the way we express, share, and monetize our thoughts. Users can connect with their wallets and upload a blog. If that blog is genuine people can upvote the correct content. As a result, our platform is a sum of our contributors.\nAbout Project\nA completely decentralized blogging app using Matic, written with Typescript, NextJS, and Hardhat using The Graph protocol. Using Graph to fetch live data feed of all activity, to instantly update the feed. No centralized database needed to track upvotes and replies.\nPublishing a blog, upvote, downvote, reply in threads and live feed update."}, {"idNo": 4, "name": "Pessimistic Swaps", "desc": "Uniswap token swap via Layer 2 pessimistic rollup", "devfolioLink": "https://devfolio.co/submissions/pessimistic-swaps-cc33", "githubLinks": ["https://github.com/kautukkundan/pessimistic-swaps"], "special_mention": " ", "stacksUsed": ["Solidity", "TypeScript", "Blockchain", "Hardhat", "Layer2"], "longDesc": "The problem Pessimistic Swaps solves\nUniswap token swaps are expensive and takes around ~115k gas per transaction. This project aims to solve this issue by batching users who wish to perform same token swaps. Instead of each user doing individual swap, a bunch of users are grouped together, their tokens are added together, the total sum of tokens are swapped in a single transaction and finally the swapped token is distributed to the users based on their initial share. \nThis is acheived by using a layer 2 \"pessimistic\" rollup which acts as a \"super wallet\" for the users. The rollup keeps track of the individual deposits and performs swap when a sufficient number of users are available. By doing batched transaction with batch size N, the total gas required from swap is reduced from N*x to just x.\nThe rollup is \"pessimistic\", it means that all the transactions are saved and applied on-chain."}, {"idNo": 5, "name": "Venrate", "desc": "Smart contract offers a standardized way of accessing reputation data that has been accumulated, where more verifications across platforms can reinforce the reliability of any one reputation score.", "devfolioLink": "https://devfolio.co/submissions/venrate-867b", "githubLinks": ["https://github.com/auralshin/venrate/tree/master"], "special_mention": " ", "stacksUsed": ["IPFS", "WebSockets", "Web3", "Ethereum", "VueX", "VueJS", "Ceramic Network"], "longDesc": "The problem Venrate solves\nFor as long as influence can be bought or sold freely, there is little incentive for such vendors to maintain online reputation scores. With blockchain technology, however, there might be a way to change how online reputation is managed. Building a decentralized reputation as a smart contract offers a standardized way of accessing reputation data that has been accumulated, where more verifications across platforms can reinforce the reliability of any one reputation score."}, {"idNo": 6, "name": "Triquetra", "desc": "Your personal NFT marketing bot", "devfolioLink": "https://devfolio.co/submissions/triquetra-4787", "githubLinks": ["https://github.com/RankJay/triquetra", "https://rankjay.github.io/triquetra/"], "special_mention": " ", "stacksUsed": ["Solidity", "Python", "Tweepy", "HTML/CSS", "Web3.py", "VRF", "Brownie", "chanlink"], "longDesc": "The problem Triquetra solves\nTriquetra, at its core, is a multi-purpose Twitter bot that tends to constantly push forward the buyer engagement of the NFT marketplace by developing a decentralized ecosystem in a form of a virtual art gallery.\nImagine, you are at a break/or on a weekend spending your leisure time on social media, especially Twitter, after spending days on making your first NFT art and looking for some trends and good times, and suddenly you recall, you don't have a fan following to look upon and sell your NFTs at great prices! well, Triquetra to the rescue. All you have to do is mention the bot and ask for the shoutout, it will grab the tweet spontaneously and will fetch the request alongside info of that NFT from Rarible \n and OpenSea to make a new tweet and publish it on the NFT Twitter account of Triquetra, which will serve as a virtual art gallery.\nWhat if you want to throw a giveaway or send out an airDrop on Twitter, but don't want to rely on other sources to handle it? Triquetra is here to automate tasks for you, the really cool thing about this giveaway is that it actually picks \"RANDOM\" users. How? Well using the ChainLink's VRF API, to sustain the oracle problem, this bot, after getting through some dramatic algorithm shifts, which is solely based on randomness provided by the API, get you your giveaway winners, and at the same time, will send out DMs to each one, for the process of how to avail them! Cool isn't it? To put the verifiable randomness of blockchain to use. Apart from these features, currently, I am building a front-end website that will hold as a place to not only do the tweet marketing but also developing an NFT marketplace to deploy your own NFT. Not only, will it help user to deploy on their favorite marketplaces but also will serve as a relayer for new NFT artists who want to amaze the world with their NFTs."}, {"idNo": 7, "name": "Pr\u00eat - A Peer to Peer lending & borrowing platform", "desc": "A decentralised peer to peer platform to borrow and lend crypto from peers without the need for pools.", "devfolioLink": "https://devfolio.co/submissions/pret-a-peer-to-peer-lending-and-borrowing-platform-cba8", "githubLinks": ["https://github.com/anshuman73/p2p-lending"], "special_mention": " ", "stacksUsed": ["Solidity", "Bootstrap", "Flask", "Python", "Ethereum", "Ganache", "Truffle Suite", "Web3js"], "longDesc": "The problem Pr\u00eat - A Peer to Peer lending & borrowing platform solves\nThe inspiration for this idea occurred when I was trying to find opportunities to arbitrage in various lending and borrowing platforms like Aave and Compound; when it came to my attention that most of the platforms, while instant and extremely secure, have a huge difference in the APYs from the borrower's perspective and the lender's. For example, at the time of writing this, the Deposit APY for $DAI was about 10.75%, whereas the borrow APY is at 19.2% on Aave's markets.\nThese kinds of differences, while generated due to the pool logic, and totally fair, leave a lot of room for yearning better rates to both - the lender and the borrower. I wanted to find a way to close this gap and allow the lenders and the borrowers to come to a better rate between the markets' - a sort of a win-win situation, where the borrower can potentially get better (lower) rates and the lender gets a better bang for their buck (as they can negotiate a better rate than the markets).\nAdditionally, another issue that I wanted to solve was the ability of the users to provide a custom liquidation threshold. In traditional markets, these are fixed and decided by the app makers, or a DAO. This effectively restricts their risk appetite and handcuffs them to the ones provided by the pool. If someone with a lower risk appetite wants a lower liquidation threshold, they should be able to get that and adjust the reward (The APY) accordingly.\nHowever, it's not all sugar. Such a system, while encourages better rates to the parties, also might not be a good way to get immediate or large loans. In fact, your bid may never be fulfilled by a lender, leading you to edit your specs multiple times before you get a lender to help you out. Additionally, this system potentially restricts large orders, as you may not find a single lender to fill your demands. Both these problems are on our radar, and we have potential solutions for them both, none of which were yet implemented (more on those below)"}, {"idNo": 8, "name": "DArt", "desc": "A decentralized version-controlled canvas for you and your friends to build the next billion-dollar NFT art piece", "devfolioLink": "https://devfolio.co/submissions/dart-2df1", "githubLinks": ["https://github.com/Decentralized-Art", "https://github.com/Decentralized-Art/DArt-UI", "https://github.com/Decentralized-Art/DArt-contracts", "https://github.com/Decentralized-Art/DArt-stitchMe"], "special_mention": " ", "stacksUsed": ["IPFS", "React", "MetaMask", "Matic", "Web3", "Material-UI", "Remix (IDE)", "Ceramic Network"], "longDesc": "The problem DArt solves\nBuilding the next billion-dollar NFT art masterpiece is often not a one man's job, so why not collaborate with your friends in building your art piece? However direct collaboration on the same canvas is not possible on the current paint softwares, and while you can always share the image with other collaborators asking for their individual contributions, version controlling the canvas becomes very difficult, specially if one of your teammates decides to doodle all over your hard work. \nEquipped with IPFS image hosting and Ceramic Network's decentralized version-control, DArt presents a decentralized GitHub for artwork.\nStep1:\nAdd wallet address of collaborators and allocate sections of canvas\nStep2:\nJoin your team with the hash shared by the owner\nStep3:\nDraw and Submit Pull Request!!!\ud83c\udfa8\ud83c\udfa8\ud83c\udfa8\ud83c\udfa8\ud83c\udfa8\nStep4:\nOwner Approves and Merges Pull Request\nExample image\nStep5:\nCreate a MultiSig wallet for your team\nGenerate a secure unique MultiSig wallet address on Ethereum for you and your team for each art piece. Requires gas fees\n*\nStep6:\nSign and mint NFT\nCurrently DArt ERC-721 tokens for your Decentralized Art piece are available on Goerli and Matic Mumbai testnet. Own your art piece as a NFT!"}, {"idNo": 9, "name": "Treasur", "desc": "Mint YouTube videos as NFTs and show off your true fanhood.", "devfolioLink": "https://devfolio.co/submissions/treasur-4489", "githubLinks": ["https://treasur.co/", "https://github.com/QEDK/treasur"], "special_mention": " ", "stacksUsed": ["React", "Redux", "Matic", "Express.js", "Web3", "Polygon"], "longDesc": "The problem Treasur solves\nThe current structure of YouTube provides no scope for decentralization or control over revenue. By building Treasur, we aim to give creators the opportunity to unlock revenue of their content which they put in so much effort for. YouTube undercuts creators by charging exorbitant fees on ad revenue and channel memberships (30% for the latter, as of now). We aim to provide a way for creators to be able to give their content at whatever price they are comfortable with, as collectibles for subscribers to own and trade. This means that we can finally provide a decentralized solution over and above the current monetization capabilities of a centralizated structure. Finally, by having an existing marketplace with sufficient liquidity, it can be a revenue stream for the vast number of creators that are underfunded on YouTube, by attaching creator fees and resale value to NFTs. The most important belief here is the idea that we are potentially in the position to introduce NFTs to a portion of the internet that is really untapped and therein lies our value proposition.\nFuture plans\nThe first iteration of this project plans for a fully L2 deployment on the Polygon chain, this will allow us to bootstrap our preliminary idea for a sufficient while. The future plans for Treasur are for a Ethereum mainnet service that mints NFTs on a side chain and has a bridge for L1-L2 transfer. We also plan to expand Treasur out of the YouTube realm into a product for creators on various platforms. This would potentially increase the seed funding and functional requirements of the project but we are prepared for it."}, {"idNo": 10, "name": "Fractional NFT Bazaar", "desc": "The platform enables users to fractionalize NFTs and release them under one shared ownership token allowing those with less knowledge of the scene to invest in digital art piece with less collateral", "devfolioLink": "https://devfolio.co/submissions/fractional-nft-bazaar-0b3d", "githubLinks": ["https://github.com/3scava1i3r/Fractional-NFT", "https://github.com/3scava1i3r/RFT_contracts", "https://fractional-nft.netlify.app/"], "special_mention": " ", "stacksUsed": ["Solidity", "React", "MetaMask", "Ethereum"], "longDesc": "The problem Fractional NFT Bazaar solves\nHistory of NFTs shown that a very small portion of NFTs stay valuable over the long term but 99% of Non Fungible Tokens lose value after a few months and their liquidity is $0.\nIn the example of Crypto Kitties, over the last 7 days a total of 1051 CKs were sold on the second hand market for a total of 23K$. The biggest sale during this week was recorded at 1.2K$ and only 61 of those sales were over 100$ (5.8%) while most items traded for a few dollars. (source: CK on NonFungible.com).\nSome more points to consider are as follows -\nSo to provide more liquidity to NFT market we could possibly break them into fractions and then work on that level.\nAs the fractions are ERC20 tokens with some extra features this opens up possibilities of Defi and NFT getting combined.\nsolve the liquidity problem in secondary markets for NFTs whereby NFT owners have to wait for someone to bid or buy at an asking price for a single piece"}, {"idNo": 11, "name": "No-Loss-Exchange", "desc": "A DEX where best proposals/small business can borrow without any collateral and depositors can get extra interest on their assets.", "devfolioLink": "https://devfolio.co/submissions/nolossexchange-2699", "githubLinks": ["https://github.com/Pranav543/No-Loss-Exchange"], "special_mention": " ", "stacksUsed": ["IPFS", "React", "Redux", "AAVE", "Solodity", "Chainlink"], "longDesc": "The problem No-Loss-Exchange solves\nNo-Loss-Exchange provides a new way for small businesses to scale by providing easy access to liquidity.\nFor small businesses one biggest problem is loans. If they are looking to scale they have to go through a lot of legal formalities to get that loan and for some businesses, this ultimately defeats the purpose. We can use different DEFI protocols to solve these issues.\nI have used AAVE, specifically AAVE's credit delegation feature to solve this issue. The problem with credit delegation is that as soon as you decide to delegate your credit line to a peer outside of your trusted circle, you are exposed to real credit risk in addition to counterparty risk.\nWith No-Loss-Exchange depositors can earn the extra yield with lower risks.\nFirstly, because your borrowers are a list of businesses in your community which you trust and interact with on daily basis. So you kind of serve as an auditor. \nSecondly, because No-Loss-Exchange diversifies your risks: smart contract algorithm allocates your credit line to several businesses minimizing your exposure to a particular counterparty."}, {"idNo": 12, "name": "Tokenize", "desc": "Robinhood of Creators", "devfolioLink": "https://devfolio.co/submissions/tokenize-019e", "githubLinks": ["http://tokeniza.in/"], "special_mention": " ", "stacksUsed": ["React", "Infura", "Torus", "Web3", "Firestore", "Nodejs"], "longDesc": "The problem Tokenize solves\nEnables creators and influencers to tokenize themselves, allowing their supporters to invest in them by buying creator tokens and trading them. We also help advertisers by creating a one-click targeted marketing portal by giving them all the necessary details and statistics required for them to find the best fit creator for them."}, {"idNo": 13, "name": "NuDrop", "desc": "Yet another FOSS SecureDrop built on top of NuCypher and Ethereum.", "devfolioLink": "https://devfolio.co/submissions/nudrop-e647", "githubLinks": ["https://nudrop.net/", "https://github.com/rhnvrm/NuDrop"], "special_mention": " ", "stacksUsed": ["Vue.js", "NuCypher", "Python"], "longDesc": "The problem NuDrop solves\nNuDrop utilizes the cryptographic infra of NuCypher network and allow users to share and submit data anonymously by people such as whistleblowers and journalists to organizations such as media outlets. It provides a side-channel app on top of NuCypher which facilitates this communication.\nBrief\nIn this app the following actors (in tandem with NuCypher terms) exist:\nAlice = Entity wishing to fund encryption of data (say Freedom of Press foundation)\nEnrico = Entity wishing to send encrypted data (such as a whistleblower)\nBob = Entity that is the intended recipient, such as Wikileaks\nUrsula = NuCypher network\nNuDrop = Our dApp (sidechannel facilitating this)\nBenefits over Securedrop\nIn the long-term, NuDrop can provide the following long term benefits\nand improvements over Securedrop:\n1. Alice can disappear from the planet and Bob can still access the data (as long as Alice provides a long enough expiry)\n2. Enrico does not need to directly upload to a Securedrop, and can instead upload encrypted data through NuDrop (as Enrico), or directly upload encrypt and upload data.\n3. Alice on behalf of Enrico can later on, choose the access control and revoke it as well.\n4. Alice does not need to interact with any of the Bob's in the system directly. And Bob also needs not to interact with Alice. Enricos only need the policy key and keep on writing data with it without ever having to interact.\n5. Alice, Enrico and Bob only need to be aware of the IPFS address to be able to communicate, which can be facilitated via NuDrop.\n6. Neither Alice nor Bob needs any NU to use the network. Only ETH is needed. Alice's ETH can only be traced to have been spent on NuCypher contracts, and will have zero trace or link to Bob. (Apart from the PolicyManager contract which is not readable as such)"}, {"idNo": 14, "name": "Cryptomafias", "desc": "Online Multiplayer Mafia party game built on Ethereum. Stake coins! Win the Game! Get the reward!", "devfolioLink": "https://devfolio.co/submissions/cryptomafias-dbe1", "githubLinks": ["https://github.com/cryptomafias/cryptomafias", "https://github.com/cryptomafias/GameContracts", "https://github.com/cryptomafias/mafia-backend", "https://github.com/cryptomafias/mafia-game"], "special_mention": " ", "stacksUsed": ["Solidity", "IPFS", "React", "Matic", "Express.js", "Textile.io", "Chainlink", "Truffle Suite"], "longDesc": "The problem Cryptomafias solves\nInspiration\nWe found that most of the blockchain game projects in this space are using traditional web2 technology for hosting gameplay. So, we decided to create a game that utilizes web3 technologies as much as possible for our project and create services like real-time chat, game rooms, player profiles that can be used by other games. These services are very common among modern online multiplayer games and we need a reliable and scalable alternative that uses a web3 tech stack. So, we have decided to create a game that incorporates all these features.\nWhat it does\nWe have built a blockchain incentivized online multiplayer mafia party Game.\n1. We maintain the game history of a player as an NFT.\n2. When you sign up, your profile is minted as an NFT and stored as a textile bucket with an IPNS link and you will also get some CMC(Crypto Mafia Coin) which is our in-game currency as a registration bonus.\n3. When you sign in, your profile will be retrieved from the IPFS and it will be used to generate your unique avatar from the hash of your token_id.\n4. There are 2 game modes: 1) casual game - which is just normal gameplay, 2) competitive game - In this, you will be staking your coin and can win/lose the coins.\n5. You can create a new room or join an existing room.\n6. In the Game we have Mafia, Doctor, Detective, and Villagers, the aim is for either Mafia to kill everyone else or for Villagers to find all Mafia and eject them from the game during the voting phase. The doctor can choose to save a player from being killed every night while the detective can inspect the role of a player during the night.\n7. You can chat in-game with fellow players and decide who to vote on!\n8. The winning party will get all staked coins and distribute them equally among themselves with a small fee deducted from the stack so that we can maintain game servers smoothly"}, {"idNo": 15, "name": "NFTProject", "desc": "Passive income from NFTs as collateral", "devfolioLink": "https://devfolio.co/submissions/nftproject-d942", "githubLinks": ["https://github.com/sebastiantf/nftproject"], "special_mention": " ", "stacksUsed": ["Solidity", "React", "MetaMask", "Dai", "Ethereum", "Scaffold-eth", "Hardhat", "Hashmasks", "Yearn Vaults", "Tenderly"], "longDesc": "The problem NFTProject solves\nNFTProject (for the lack of a better name) is a peer-to-peer marketplace that allows generating yield from idle NFTs. Holders can put up their NFTs as collateral and lenders with access to liquidity can offer capital against these collateral NFTs. The capital thus raised will be used in promising (automated) yield generation strategies across DeFi. The yield thus generated will be distributed between the participants. There are several NFTs already available in the market with their value constantly going up. There are several collectors who buy these NFTs at very high prices. But once a collector acquires an NFT, there isn't much value generated from it, while sitting around idle inside their wallets. These NFTs can generate returns for the collector only in its next sale, and that too by having to cede ownership. This project aims to help collectors use their idle NFTs to generate passive income, without giving up their ownership. For lenders who are looking for high yield investment opportunities in DeFi, they can invest in such strategies with less effort (automated), while hedging the risk of being liquidated which they would've had to bear, had they invested in these strategies directly. NFT holders can list their NFTs in the marketplace as open for offers from lenders. Lenders checking the marketplace for listed NFTs can then see the NFT and make offers. Once the NFT holder and lender reach a consensus around the offer and the yield generation strategy, the NFT along with the funds offered by the lender will be transferred to the protocol's escrow contract. The capital offered by the lender will be invested in one of the high risk, even leveraged yield generation strategies across DeFi, by the protocol. The protocol would then keep accruing yield from these strategies. The yield thus generated will be shared between the NFT provider and the lender, generating passive income off of the otherwise idle NFT."}, {"idNo": 16, "name": "Cross Chain Streaming using Superfluid", "desc": "A set of features built on top of the SuperFluid protocol to allow seamless cross-chain streaming and real-time asset conversion.", "devfolioLink": "https://devfolio.co/submissions/cross-chain-streaming-using-superfluid-f418", "githubLinks": ["https://github.com/ankurdubey521/SuperFluid-Cross-Chain-Externsion"], "special_mention": " ", "stacksUsed": ["React.js", "MaterialUI", "Hardhat", "Superfluid"], "longDesc": "The problem Cross Chain Streaming using Superfluid solves\nWhat may happen is that a user may have some funds on a chain (say mainnet) and wished to interact with a DApp deployed on another chain (like polygon). In the case of SuperFluid streams, a conventional method would require the user to manually transfer the tokens from one chain to another using a Token Bridge, however, this is not ideal and defeats the purpose of gasless streams.\nThe project aims to solve this issue by utilizing Pools of SuperTokens deployed on various chains that would act as entry and exit points of cross-chain streams. This is done by starting a stream from an EOA to a Pool on the same chain, and then starting an equivalent stream on another from the chain's Pool to the EOA on that chain, effectively starting a cross-chain stream b/w the EOAs involved. This allows users to seamlessly start a SuperFluid stream from one chain to another without manually transferring the tokens to the second chain.\nThe use of token pools also allows real-time asset conversion, for example converting a stream of DAIx to an equivalent USDTx stream. This is done by starting a stream of DAIx to a Pool, and then starting an equivalent stream of USDTx back to the user from the pool, which the user is then free to use for their usecase. This is useful in situation where a DApp may only accept streams in a particular token, one which the user may not have at the moment.\nThe pools act as reserves of SuperTokens, and the liquidity is provided by LPs. LPs are incentivised to give their tokens to the Pool by paying them a fraction of all streams opened using the system, in proportion to the LP's contribution. (this is still in development)."}, {"idNo": 17, "name": "NiftyDiscord Member", "desc": "NiftyDiscordMember is a platform where one can tokenize roles, channels of one's Discord servers. Buyers can buy NFT and access the creator's private channels by starting superfluid stream using NFT.", "devfolioLink": "https://devfolio.co/submissions/niftydiscord-member-6041", "githubLinks": ["https://github.com/prakashujjwal1010/NiftyDiscordMember", "https://github.com/prakashujjwal1010/NiftyDiscordMemberBot"], "special_mention": " ", "stacksUsed": ["Solidity", "Infura", "Ethereum", "Nodejs", "React.js", "discord.js", "Superfluid"], "longDesc": "The problem NiftyDiscord Member solves\nThe problem NiftyDiscord Member solves is the creation of a sustainable business model that aligns creator and fans by combining discord and NFT. Discord is already a popular platform for content creators and everyfan wants to join the discord private channel of their favourite creators. Creators also wants to make money using discord. Nifty Discord Member allows creators to tokenize the Discord roles and sell the membership of their private members only channels. It allows NFT holder (who bought the NiftyDiscord NFT from their favourite marketplaces opensea etc) to activate the NFT by starting the superfluid stream to the NFT's creator and can become NiftyDiscord Member of his creator and can access private members only channels. We have a NiftyDiscord bot which will moderates users/members and will let them join private channels and will remove them if their NFTs got deactivated (superfluid stream stopped)\nNiftyDiscord Member = WebApp + Discord Bot :)"}, {"idNo": 18, "name": "DeFi-Battles \u2694\ufe0f", "desc": "DeFi-Battles is your one-stop-shop for minting provably unique & rare NFTs and battle other players' NFTs with your unique NFT character powers and win rewards! \ud83c\udf81 Invest. Grow. Battle. Win rewards!", "devfolioLink": "https://devfolio.co/submissions/defibattles-9d4b", "githubLinks": ["https://github.com/orgs/DeFi-Battles/", "https://misty-star-3892.on.fleek.co/"], "special_mention": " ", "stacksUsed": ["Solidity", "IPFS", "React", "Socket.IO", "AAVE", "Chainlink", "web3.js", "Azure", "ERC721 Contract", "Remotion"], "longDesc": "The problem DeFi-Battles \u2694\ufe0f solves\nDeFi-Battles introduces a gaming aspect of the NFTs. Instead of having them as a collectible sitting in your wallet, now they can be used to battle other players' NFTs and earn rewards \u2728\nMuch of the world is yet to be introduced to cryptocurrencies, DeFi and NFTs. Our aim with this project is to onboard them to the world of crypto with unique characters, introduce them to DeFi, deposit yields & staking in battles.\nAll the NFT characters on DeFi-Battles are rare and unique. All the monster characters are generated from a DNA that's uniquely generated by the Chainlink VRF. The DNA also gives them a type such as fire, water, grass etc. These characters are minted as an ERC721 token and the tokenURI is stored on IPFS. These NFTs can then be made to battle other players' NFTs by staking ETH in a winner-takes-all battle bet!\nWe also introduced various interesting aspects in this platform such as :\nPlayer VS Player battles - In which players battle other players' NFTs and earns rewards (Operational)\nPlayer VS Boss Battles - in this mode the boss is an NFT sponsored by advertisers and other players Battle and earn rewards based on contribution (WIP)\nThe money deposited to purchase NFTs goes into an Aave pool and generates interest, hence appreciating the NFT value (WIP)\nDeFi-Battles aims to be the \"Top Shots\" of NFTs for the Pokemon card nerds of the world. We aim to introduce them to DeFi with multipurpose NFTs and make them crypto natives. With the platform shaped as a game, we intend to gamify DeFi and make it intuitive to Gen Z and millenials."}, {"idNo": 19, "name": "DeepChain", "desc": "Fighting Deepfakes and misinformation using blockchain.", "devfolioLink": "https://devfolio.co/submissions/deepchain-c2ce", "githubLinks": ["https://github.com/dev117uday/deepchain"], "special_mention": " ", "stacksUsed": ["MetaMask", "Fleek", "IPFS and Pinata"], "longDesc": "The problem DeepChain solves\nWith the rise in social media and the ever-increasing demand for it, there remains no single source of news.\nMost of the news, videos and images we receive are manipulated deliberately. And this is done mostly by changing the content, context and intent of the news. There is no way to know if we are watching the video or reading the news that we were intended to watch or read. The advancement in deep learning gave rise to deep fakes, which is nothing but Artificial Intelligence making some fake videos. Deepfake technology creates convincing but entirely fake videos and photos from scratch.\nAnd in order to combat this, we came up with an idea called DeepChain which intends to allow the user to confirm the publishing source and confirm that it has not been altered at any point in time.\nThis platform could be used by the publishing houses, the government for their official announcement as well as normal users.\n\"Working of DeepChain\"\nIf anyone wants to sign any piece of information like a video, an image or an audio file, they can upload it to IPFS. Since IPFS doesn\u2019t store any metadata of the file, we made a smart contract which signs a transaction containing the Content Identifier of the file uploaded to IPFS. This creates a proof-of-chain about the person of the publication house reporting and timestamping it and proof-of-origin of the content.\nYou can then share the transaction hash and anyone can verify the information by looking at the URI of the media from IPFS and then can retrieve the original message."}]